教程介绍

说起wordpress生成静态缓存的话首先想到的就是WP Super Cache插件，确实如此，大多数的wordpress站长们都在使用，但是永远都有那些纠结完美派的人，不喜欢用插件的人也十分的多，而今天介绍的非插件搞定wordpress生成静态缓存文件方法，即可为大家去掉这款强大的wordpress缓存插件WP Super Cache的使用！
首先说下，WP Super Cache的工作原理吧，该插件的Mod_rewrite加速模式加速效果非常好，因为这种模式是直接将网站的页面生成静态的html页面，然后使用Mod_rewrite将请求转发到静态文件，这样就跳过了php解析这一步直接将页面吐出到浏览器，从而达到加速的效果。
而今天介绍的教程，几乎和上面的工作原理相同，再配合CDN等加速类的使用的话，效果将十分的明显，提速100%啊！
教程操作

<?php
define('CACHE_ROOT', dirname(__FILE__).'/cache');
define('CACHE_LIFE', 86400);                   //缓存文件的生命期，单位秒，86400秒是一天
define('CACHE_SUFFIX','.html');             //缓存文件的扩展名，千万别用 .php .asp .jsp .pl 等等
$file_name  = md5($_SERVER['REQUEST_URI']).CACHE_SUFFIX;    //缓存文件名
//缓存目录，根据md5的前两位把缓存文件分散开。避免文件过多。如果有必要，可以用第三四位为名，再加一层目录。
//256个目录每个目录1000个文件的话，就是25万个页面。两层目录的话就是65536*1000=六千五百万。
//不要让单个目录多于1000，以免影响性能。
$cache_dir  = CACHE_ROOT.'/'.substr($file_name,0,2);
$cache_file = $cache_dir.'/'.$file_name;    //缓存文件存放路径
if($_SERVER['REQUEST_METHOD']=='GET'){      //GET方式请求才缓存，POST之后一般都希望看到最新的结果
    if(file_exists($cache_file) && time() - filemtime($cache_file) < CACHE_LIFE){   //如果缓存文件存在，并且没有过期，就把它读出来。
        $fp = fopen($cache_file,'rb');
        fpassthru($fp);
        fclose($fp);
        exit();
    }
    elseif(!file_exists($cache_dir)){
        if(!file_exists(CACHE_ROOT)){
            mkdir(CACHE_ROOT,0777);
            chmod(CACHE_ROOT,0777);
        }
        mkdir($cache_dir,0777);
        chmod($cache_dir,0777);
    }
    function auto_cache($contents){         //回调函数，当程序结束时自动调用此函数
        global $cache_file;
        $fp = fopen($cache_file,'wb');
        fwrite($fp,$contents);
        fclose($fp);
        chmod($cache_file,0777);
        clean_old_cache();                  //生成新缓存的同时，自动删除所有的老缓存。以节约空间。
        return $contents;
    }
    function clean_old_cache(){
        chdir(CACHE_ROOT);
        foreach (glob("*/*".CACHE_SUFFIX) as $file){
           if(time()-filemtime($file)>CACHE_LIFE){
               unlink($file);
           }
        }
    }
    ob_start('auto_cache');                 //回调函数 auto_cache
}
else{
    if(file_exists($cache_file)){           //file_exists() 函数检查文件或目录是否存在。
        unlink($cache_file);                //不是GET的请求就删除缓存文件。
    }
}
?>
代码里都有注释，将代码保存为cache.php文件，然后将其放到网站的根目录下，切记，是网站根目录，非wordpress主题的根目录！然后给网站根目录创建个cache文件夹，给予777的写入权限

然后将代码
require('cache.php');
放到根目录的index.php的<?php之后
这样，就会自动的在cache文件里生成静态文件了，然后大家可以配合七牛的加速给予cache文件加速，效果将能够有很明显的提速！